date: 2013-12-08

<h1>Week 6: Ready, Set, Rails!</h1>

<img src="http://awesome-desktop.com/wp-content/uploads/2012/11/Rails-1920x1200-HD-Wallpaper-728x455.jpg" alt="rails" title="Rails" />

<p>We made it through the first week of Rails! Well, technically we were already introduced to Ruby on Rails five weeks ago in our first pair programming project in Week 1, but we didn’t come to understand it very deeply - I remember that experience being vague and blurred out. Now, it feels, we have learned a lot, and what seemed to be out of the scope of my understanding back then made so much more sense this week.</p>

<p>We started out by doing a tutorial on Rails. There are a lot of tutorials that promise to outline everything and be totally beginner friendly, but when you actually start doing them you can get confused and frustrated. I just think it’s really hard to find comprehensive tutorials for total beginners written in a “explain-Bluetooth-to-your-grandma” style. But I think it’s not easy for the experienced developer to understand where we are as beginners, and what seems to be a very simple, basic idea to a pro, is usually something that takes time to conceptualize when you just get introduced to it.</p>

<p>Last week we had a video conference with Julie Pagano, a software engineer at Google.  We had all watched a <a href="http://juliepagano.com/blog/2013/11/02/it-s-dangerous-to-go-alone-battling-the-invisible-monsters-in-tech/">talk she gave on impostor syndrome</a>, an issue I addressed in a previous <a href="/blog/week2">post</a>. In the talk she shares her knowledge about the issue, how it hinders afflicted individuals and how people surrounding them can help.</p>

<blockquote>
  <p>“Making things screw up is how to get better at them” </p>

<p>Julie Pagano</p>
</blockquote>

<p>The discussion with Julia made me wonder: How can you tell if you have impostor syndrome or if you are just being realistic about your lack of programming skills? What defines a bad programmer?  If programming is an art how do you distinguish a good programmer from a bad one? Wouldn‘t the difference between the two simply be a matter of personal styles and preferences? Most people recognize Malevic’s “black square” as a masterpiece - But couldn’t some people say it’s an overrated piece that any child could reproduce?  Where is the objectivity?  How will I know?</p>